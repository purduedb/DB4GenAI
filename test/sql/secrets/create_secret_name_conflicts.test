# name: test/sql/secrets/create_secret_name_conflicts.test
# description: Test name conflict behaviour for secrets
# group: [secrets]

statement ok
PRAGMA enable_verification;

load __TEST_DIR__/persistent_secrets.db

require httpfs

statement ok
set secret_directory='__TEST_DIR__/create_secret_name_conflicts'

statement ok
CREATE TEMPORARY SECRET s1 ( TYPE S3 )

statement error
CREATE TEMPORARY SECRET s1 ( TYPE S3 )
----
Invalid Input Error: Temporary secret with name 's1' already exists!

statement ok
CREATE PERSISTENT SECRET s1 ( TYPE S3 )

statement error
CREATE PERSISTENT SECRET s1 ( TYPE S3 )
----
Persistent secret with name 's1' already exists in secret storage 'local_file'!

statement error
DROP SECRET s1;
----
Invalid Input Error: Ambiguity found for secret name 's1', secret occurs in multiple storages

statement error
DROP SECRET s1 FROM bogus;
----
Invalid Input Error: Unknown storage type found for drop secret: 'bogus'

statement ok
DROP TEMPORARY SECRET s1;

# Re-dropping the temp s1 is now erroneous
statement error
DROP TEMPORARY SECRET s1;
----
Invalid Input Error: Failed to remove non-existent secret with name 's1'

query II
SELECT name, storage FROM duckdb_secrets()
----
s1	local_file

# Now we will do it again but while the permanent secret is still lazily loaded
restart

statement ok
set secret_directory='__TEST_DIR__/create_secret_name_conflicts'

statement ok
CREATE TEMPORARY SECRET s1 ( TYPE S3 )

# Now the drop should be ambiguous again: but the persistent secret will be lazily loaded now
statement error
DROP SECRET s1;
----
Invalid Input Error: Ambiguity found for secret name 's1', secret occurs in multiple storages

# Fully specified drop statement this time
statement ok
DROP PERSISTENT SECRET s1 FROM LOCAL_FILE;

# Now a semi-weird case: this will create if not exists only within its own storage: therefore this does actually create
# the secret
statement ok
CREATE PERSISTENT SECRET IF NOT EXISTS s1 ( TYPE S3 )

query II
SELECT name, storage FROM duckdb_secrets() ORDER BY storage
----
s1	local_file
s1	memory

statement ok
DROP PERSISTENT SECRET s1;

statement ok
DROP SECRET s1;